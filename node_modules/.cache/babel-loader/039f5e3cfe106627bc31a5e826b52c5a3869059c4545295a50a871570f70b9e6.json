{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"./components/UserInput/UserInput\";\nimport Header from \"./components/Header/Header\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport \"./index.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [UserResult, setUserResult] = useState(null);\n  const calculateHandler = userInput => {\n    setUserResult(userInput);\n  };\n  const yearlyData = [];\n  let currentSavings = +userInput[\"current-savings\"];\n  const yearlyContribution = +userInput[\"yearly-contribution\"];\n  const expectedReturn = +userInput[\"expected-return\"] / 100;\n  const duration = +userInput[\"duration\"];\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pJpXO3R4iyLuy6A97VGCHnnanjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UserInput","Header","ResultsTable","React","useState","jsxDEV","_jsxDEV","App","_s","UserResult","setUserResult","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import UserInput from \"./components/UserInput/UserInput\";\nimport Header from \"./components/Header/Header\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport \"./index.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [UserResult, setUserResult] = useState(null);\n  const calculateHandler = (userInput) => {\n    setUserResult(userInput);\n  };\n  const yearlyData = [];\n\n  let currentSavings = +userInput[\"current-savings\"];\n  const yearlyContribution = +userInput[\"yearly-contribution\"];\n  const expectedReturn = +userInput[\"expected-return\"] / 100;\n  const duration = +userInput[\"duration\"];\n\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution,\n    });\n  }\n  return (\n    <div>\n      <Header />\n      <UserInput onCalculate={calculateHandler} />\n      <ResultsTable />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,kCAAkC;AACxD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAO,aAAa;AACpB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMO,gBAAgB,GAAIC,SAAS,IAAK;IACtCF,aAAa,CAACE,SAAS,CAAC;EAC1B,CAAC;EACD,MAAMC,UAAU,GAAG,EAAE;EAErB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC;EAClD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC;EAC5D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;EAC1D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC;EAEvC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;IACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;IACrDF,UAAU,CAACO,IAAI,CAAC;MACd;MACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;MACXC,cAAc,EAAEA,cAAc;MAC9BG,gBAAgB,EAAER,cAAc;MAChCC,kBAAkB,EAAEA;IACtB,CAAC,CAAC;EACJ;EACA,oBACET,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAACN,SAAS;MAAC4B,WAAW,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACJ,YAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACnB,EAAA,CA9BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}